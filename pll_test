`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    09:40:40 12/20/2017 
// Design Name: 
// Module Name:    pll_test 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module pll_test(
	input wire clk,
	input wire rst_n,
	output wire clk_out
    );

wire locked;
wire pll_clk_o;

  pll_ip instance_name
   (// Clock in ports
    .CLK_IN1(clk),      // IN
    // Clock out ports
    .CLK_OUT1(pll_clk_o),     // OUT
    .CLK_OUT2(),     // OUT
    .CLK_OUT3(),     // OUT
    .CLK_OUT4(),     // OUT
    // Status and control signals
    .RESET(~rst_n),// IN
    .LOCKED(locked)); 
ODDR2 #(
    .DDR_ALIGNMENT("NONE"), // Sets output alignment to "NONE", "C0" or "C1"
    .INIT(1'b0),    // Sets initial state of the Q output to 1'b0 or 1'b1
    .SRTYPE("SYNC") // Specifies "SYNC" or "ASYNC" set/reset
    ) U_ODDR2_PLL_inst (////U_ODDR2_PLL输出时钟名
      .Q(clk_out),   // 1-bit DDR output data
      .C0(pll_clk_o),   // 1-bit clock input    clock_PLL输出时钟名
      .C1(~pll_clk_o),   // 1-bit clock input
      .CE(1'b1), // 1-bit clock enable input
      .D0(1'b1), // 1-bit data input (associated with C0)
      .D1(1'b0), // 1-bit data input (associated with C1)
      .R(1'b0),   // 1-bit reset input
      .S(1'b0)    // 1-bit set input
    );

endmodule
